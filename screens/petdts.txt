import React, { Component } from 'react';
import { View, StyleSheet, Text, FlatList,TouchableOpacity ,TextInput} from 'react-native';
import { ListItem } from 'react-native-elements'
import firebase from 'firebase';
import db from '../config'
import MyHeader from '../components/MyHeader';
import { Avatar } from "react-native-elements";

export default class PetDetailsScreen extends Component{
  constructor(){
    super()
    this.state = {
        userId:firebase.auth().currentUser.email,
      donatedPets : [],
      image:"#",
      search:"",

    }
  this.requestRef= null
  }

  fetchImage = (imageName) => {
    var storageRef = firebase
      .storage()
      .ref()
      .child("user_profiles/" + imageName);

    // Get the download URL
    storageRef
      .getDownloadURL()
      .then((url) => {
        this.setState({ image: url });
      })
      .catch((error) => {
        this.setState({ image: "#" });
      });
  };

  

  getdonatedPets =()=>{
    this.requestRef = db.collection("pets_to_donate")
    .onSnapshot((snapshot)=>{
      var donatedPets = snapshot.docs.map(document => document.data());
      this.setState({
        donatedPets : donatedPets
      });
    })
  }

  componentDidMount(){
    this.getdonatedPets()
    this.fetchImage(this.state.userId);
  }

  componentWillUnmount(){
    this.requestRef();
  }

  keyExtractor = (item, index) => index.toString()

  renderItem = ( {item, i} ) =>{

    return (
      <View>
   
          <ListItem
        key={i}
        
        leftAvatar={<Avatar
          rounded
          source={{
            uri: item.image,
          }}
          size="medium"
        />}
        title={"pests age :" ,item.petAge}
        subtitle={item.petbreed}
        titleStyle={{ color: 'black', fontWeight: 'bold' }}
        rightElement={
            <TouchableOpacity style={styles.button}>
              <Text style={{color:'#ffff'}}>View</Text>
            </TouchableOpacity>
          }
        bottomDivider
      />
        
      
      </View>
    )
    
  }


  render(){
    return(
      <View style={{flex:1}}>
        <MyHeader title="Donate Books"/>
        <View style={styles.searchBar}>
        <TextInput 
          style ={styles.bar}
          placeholder = "Enter breed that you are looking for"
          onChangeText={(text)=>{this.setState({search:text})}}/>
          <TouchableOpacity
            style = {styles.searchButton}
            onPress={()=>{
              <FlatList
              keyExtractor={this.keyExtractor}
              data={this.state.donatedPets}
              renderItem={this.renderItem}
           
            />

            }}
          >
            <Text>Search</Text>
          </TouchableOpacity>
          </View>
        <View style={{flex:1}}>
          {
            this.state.donatedPets.length === 0
            ?(
              <View style={styles.subContainer}>
                <Text style={{ fontSize: 20}}>List Of All Pets Available </Text>
              </View>
            )
            :(
                <View>
              
          
              <FlatList
                keyExtractor={this.keyExtractor}
                data={this.state.donatedPets}
                renderItem={this.renderItem}
              />
             
              </View>
            )
          }
        </View>
      </View>
    )
  }
}

const styles = StyleSheet.create({
  subContainer:{
    flex:1,
    fontSize: 20,
    justifyContent:'center',
    alignItems:'center'
  },
  button:{
    width:100,
    height:30,
    justifyContent:'center',
    alignItems:'center',
    backgroundColor:"#ff5722",
    shadowColor: "#000",
    shadowOffset: {
       width: 0,
       height: 8
     }
  },
  searchBar:{
    flexDirection:'row',
    height:40,
    width:'auto',
    borderWidth:0.5,
    alignItems:'center',
    backgroundColor:'grey',

  },
  bar:{
    borderWidth:2,
    height:30,
    width:300,
    paddingLeft:10,
  },
  searchButton:{
    borderWidth:1,
    height:30,
    width:50,
    alignItems:'center',
    justifyContent:'center',
    backgroundColor:'green'
  }
})
